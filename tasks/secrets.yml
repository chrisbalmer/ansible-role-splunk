---
- name: Install pip
  yum:
    name: python-pip
    state: latest

- name: Install splunksecrets
  pip:
    name: splunksecrets

- name: Check if splunk.secret exists
  stat:
    path: "{{ splunk_secrets_path }}"
  register: secrets_check

- name: Start Splunk once to create secrets file
  service:
    name: splunk
    state: started
  when: not secrets_check.stat.exists

- name: Stop Splunk
  service:
    name: splunk
    state: stopped

- name: Get existing passwords
  set_fact:
    existing_general_pass4SymmKey: "{{ lookup('ini', 'pass4SymmKey section=general file={{ splunk_server_conf_location }}') }}"
    existing_ssl_password: "{{ lookup('ini', 'sslPassword section=sslConfig file={{ splunk_server_conf_location }}') }}"

- name: Decrypt general pass4SymmKey
  command: "splunksecrets --splunk-secret {{ splunk_secrets_path }} -D --new --password {{ existing_general_pass4SymmKey }}"
  when: existing_general_pass4SymmKey
  register: decrypted_general_pass4SymmKey

- name: Decrypt sslPassword
  command: "splunksecrets --splunk-secret {{ splunk_secrets_path }} -D --new --password {{ existing_ssl_password }}"
  when: existing_ssl_password
  register: decrypted_ssl_password

- name: Use existing encrypted general pass4SymmKey
  set_fact:
    splunk_general_pass4SymmKey: "{{ existing_general_pass4SymmKey }}"
  when: splunk_general_pass4SymmKey == decrypted_general_pass4SymmKey

- name: Use existing encrypted ssl password
  set_fact:
    splunk_ssl_password: "{{ existing_ssl_password }}"
  when: splunk_ssl_password == decrypted_ssl_password



